//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFekzam
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShopAuto : DbContext
    {
        public ShopAuto()
            : base("name=ShopAuto")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<OrdersDetail> OrdersDetail { get; set; }
        public virtual DbSet<Products> Products { get; set; }
    
        public virtual int usp_add_customers(string fio, string adress, string phone)
        {
            var fioParameter = fio != null ?
                new ObjectParameter("Fio", fio) :
                new ObjectParameter("Fio", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_customers", fioParameter, adressParameter, phoneParameter);
        }
    
        public virtual int usp_add_employee(string fio, string post, Nullable<System.DateTime> date_start, Nullable<System.DateTime> date_end, Nullable<System.DateTime> birthday, string pasport_data, string phone1, string phone2)
        {
            var fioParameter = fio != null ?
                new ObjectParameter("fio", fio) :
                new ObjectParameter("fio", typeof(string));
    
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var date_startParameter = date_start.HasValue ?
                new ObjectParameter("date_start", date_start) :
                new ObjectParameter("date_start", typeof(System.DateTime));
    
            var date_endParameter = date_end.HasValue ?
                new ObjectParameter("date_end", date_end) :
                new ObjectParameter("date_end", typeof(System.DateTime));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var pasport_dataParameter = pasport_data != null ?
                new ObjectParameter("pasport_data", pasport_data) :
                new ObjectParameter("pasport_data", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_employee", fioParameter, postParameter, date_startParameter, date_endParameter, birthdayParameter, pasport_dataParameter, phone1Parameter, phone2Parameter);
        }
    
        public virtual int usp_add_orders(string order_details, string order_status, string waybill_num, Nullable<decimal> sum_final, Nullable<decimal> sum_payed, Nullable<System.DateTime> order_date, Nullable<System.DateTime> date_send, Nullable<System.DateTime> date_arrive, string delivery)
        {
            var order_detailsParameter = order_details != null ?
                new ObjectParameter("Order_details", order_details) :
                new ObjectParameter("Order_details", typeof(string));
    
            var order_statusParameter = order_status != null ?
                new ObjectParameter("Order_status", order_status) :
                new ObjectParameter("Order_status", typeof(string));
    
            var waybill_numParameter = waybill_num != null ?
                new ObjectParameter("Waybill_num", waybill_num) :
                new ObjectParameter("Waybill_num", typeof(string));
    
            var sum_finalParameter = sum_final.HasValue ?
                new ObjectParameter("Sum_final", sum_final) :
                new ObjectParameter("Sum_final", typeof(decimal));
    
            var sum_payedParameter = sum_payed.HasValue ?
                new ObjectParameter("Sum_payed", sum_payed) :
                new ObjectParameter("Sum_payed", typeof(decimal));
    
            var order_dateParameter = order_date.HasValue ?
                new ObjectParameter("Order_date", order_date) :
                new ObjectParameter("Order_date", typeof(System.DateTime));
    
            var date_sendParameter = date_send.HasValue ?
                new ObjectParameter("Date_send", date_send) :
                new ObjectParameter("Date_send", typeof(System.DateTime));
    
            var date_arriveParameter = date_arrive.HasValue ?
                new ObjectParameter("Date_arrive", date_arrive) :
                new ObjectParameter("Date_arrive", typeof(System.DateTime));
    
            var deliveryParameter = delivery != null ?
                new ObjectParameter("delivery", delivery) :
                new ObjectParameter("delivery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_orders", order_detailsParameter, order_statusParameter, waybill_numParameter, sum_finalParameter, sum_payedParameter, order_dateParameter, date_sendParameter, date_arriveParameter, deliveryParameter);
        }
    
        public virtual int usp_add_orders_details(Nullable<int> order_id, Nullable<int> product_id, Nullable<int> quantity)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_orders_details", order_idParameter, product_idParameter, quantityParameter);
        }
    
        public virtual int usp_add_products(string brand, string category, string name, string art, string catalogue_num, string manufacturer, Nullable<decimal> price_first, Nullable<decimal> price_sale, string color, Nullable<int> product_rest)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var artParameter = art != null ?
                new ObjectParameter("art", art) :
                new ObjectParameter("art", typeof(string));
    
            var catalogue_numParameter = catalogue_num != null ?
                new ObjectParameter("catalogue_num", catalogue_num) :
                new ObjectParameter("catalogue_num", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("manufacturer", manufacturer) :
                new ObjectParameter("manufacturer", typeof(string));
    
            var price_firstParameter = price_first.HasValue ?
                new ObjectParameter("price_first", price_first) :
                new ObjectParameter("price_first", typeof(decimal));
    
            var price_saleParameter = price_sale.HasValue ?
                new ObjectParameter("price_sale", price_sale) :
                new ObjectParameter("price_sale", typeof(decimal));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var product_restParameter = product_rest.HasValue ?
                new ObjectParameter("product_rest", product_rest) :
                new ObjectParameter("product_rest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_products", brandParameter, categoryParameter, nameParameter, artParameter, catalogue_numParameter, manufacturerParameter, price_firstParameter, price_saleParameter, colorParameter, product_restParameter);
        }
    
        public virtual ObjectResult<usp_count_product_in_category_Result> usp_count_product_in_category(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_count_product_in_category_Result>("usp_count_product_in_category", categoryParameter);
        }
    
        public virtual int usp_delete_customers(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_customers", idParameter);
        }
    
        public virtual int usp_delete_employee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_employee", idParameter);
        }
    
        public virtual int usp_delete_orders(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_orders", idParameter);
        }
    
        public virtual int usp_delete_orders_details(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_orders_details", idParameter);
        }
    
        public virtual int usp_delete_products(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_products", idParameter);
        }
    
        public virtual ObjectResult<usp_show_today_orders_Result> usp_show_today_orders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_show_today_orders_Result>("usp_show_today_orders");
        }
    
        public virtual int usp_update_customers(string fio, string adress, string phone, Nullable<int> id)
        {
            var fioParameter = fio != null ?
                new ObjectParameter("Fio", fio) :
                new ObjectParameter("Fio", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_customers", fioParameter, adressParameter, phoneParameter, idParameter);
        }
    
        public virtual int usp_update_employee(string fio, string post, Nullable<System.DateTime> date_start, Nullable<System.DateTime> date_end, Nullable<System.DateTime> birthday, string pasport_data, string phone1, string phone2, Nullable<int> id)
        {
            var fioParameter = fio != null ?
                new ObjectParameter("fio", fio) :
                new ObjectParameter("fio", typeof(string));
    
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var date_startParameter = date_start.HasValue ?
                new ObjectParameter("date_start", date_start) :
                new ObjectParameter("date_start", typeof(System.DateTime));
    
            var date_endParameter = date_end.HasValue ?
                new ObjectParameter("date_end", date_end) :
                new ObjectParameter("date_end", typeof(System.DateTime));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var pasport_dataParameter = pasport_data != null ?
                new ObjectParameter("pasport_data", pasport_data) :
                new ObjectParameter("pasport_data", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_employee", fioParameter, postParameter, date_startParameter, date_endParameter, birthdayParameter, pasport_dataParameter, phone1Parameter, phone2Parameter, idParameter);
        }
    
        public virtual int usp_update_orders(string order_details, string order_status, string waybill_num, Nullable<decimal> sum_final, Nullable<decimal> sum_payed, Nullable<System.DateTime> order_date, Nullable<System.DateTime> date_send, Nullable<System.DateTime> date_arrive, string delivery, Nullable<int> id)
        {
            var order_detailsParameter = order_details != null ?
                new ObjectParameter("Order_details", order_details) :
                new ObjectParameter("Order_details", typeof(string));
    
            var order_statusParameter = order_status != null ?
                new ObjectParameter("Order_status", order_status) :
                new ObjectParameter("Order_status", typeof(string));
    
            var waybill_numParameter = waybill_num != null ?
                new ObjectParameter("Waybill_num", waybill_num) :
                new ObjectParameter("Waybill_num", typeof(string));
    
            var sum_finalParameter = sum_final.HasValue ?
                new ObjectParameter("Sum_final", sum_final) :
                new ObjectParameter("Sum_final", typeof(decimal));
    
            var sum_payedParameter = sum_payed.HasValue ?
                new ObjectParameter("Sum_payed", sum_payed) :
                new ObjectParameter("Sum_payed", typeof(decimal));
    
            var order_dateParameter = order_date.HasValue ?
                new ObjectParameter("Order_date", order_date) :
                new ObjectParameter("Order_date", typeof(System.DateTime));
    
            var date_sendParameter = date_send.HasValue ?
                new ObjectParameter("Date_send", date_send) :
                new ObjectParameter("Date_send", typeof(System.DateTime));
    
            var date_arriveParameter = date_arrive.HasValue ?
                new ObjectParameter("Date_arrive", date_arrive) :
                new ObjectParameter("Date_arrive", typeof(System.DateTime));
    
            var deliveryParameter = delivery != null ?
                new ObjectParameter("delivery", delivery) :
                new ObjectParameter("delivery", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_orders", order_detailsParameter, order_statusParameter, waybill_numParameter, sum_finalParameter, sum_payedParameter, order_dateParameter, date_sendParameter, date_arriveParameter, deliveryParameter, idParameter);
        }
    
        public virtual int usp_update_orders_details(Nullable<int> order_id, Nullable<int> product_id, Nullable<int> quantity, Nullable<int> id)
        {
            var order_idParameter = order_id.HasValue ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_orders_details", order_idParameter, product_idParameter, quantityParameter, idParameter);
        }
    
        public virtual int usp_update_products(string brand, string category, string name, string art, string catalogue_num, string manufacturer, Nullable<decimal> price_first, Nullable<decimal> price_sale, string color, Nullable<int> product_rest, Nullable<int> id)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("brand", brand) :
                new ObjectParameter("brand", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var artParameter = art != null ?
                new ObjectParameter("art", art) :
                new ObjectParameter("art", typeof(string));
    
            var catalogue_numParameter = catalogue_num != null ?
                new ObjectParameter("catalogue_num", catalogue_num) :
                new ObjectParameter("catalogue_num", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("manufacturer", manufacturer) :
                new ObjectParameter("manufacturer", typeof(string));
    
            var price_firstParameter = price_first.HasValue ?
                new ObjectParameter("price_first", price_first) :
                new ObjectParameter("price_first", typeof(decimal));
    
            var price_saleParameter = price_sale.HasValue ?
                new ObjectParameter("price_sale", price_sale) :
                new ObjectParameter("price_sale", typeof(decimal));
    
            var colorParameter = color != null ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(string));
    
            var product_restParameter = product_rest.HasValue ?
                new ObjectParameter("product_rest", product_rest) :
                new ObjectParameter("product_rest", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_update_products", brandParameter, categoryParameter, nameParameter, artParameter, catalogue_numParameter, manufacturerParameter, price_firstParameter, price_saleParameter, colorParameter, product_restParameter, idParameter);
        }
    }
}
